#!/usr/bin/env php
<?php
/*
Command: permissions
Set permissions on log and cache directories.  Remove exising files first.  Permissions part requires sudo abilities.

Arguments:
	aclType: What type of ACL mechanism to use.  One of (chmod|setfacl|none)
*/

if($argc === 2){
	$varPath = __DIR__ . '/../var';
	$cachePath = $varPath . "/cache";
	$logPath = $varPath . "/logs";
	if(is_dir($cachePath)){
		echo "Clearing cache folder\n";
		passthru("rm -rf {$cachePath}/*");
	}else{
		echo "Creating cache folder\n";
		passthru("mkdir {$cachePath}");
	}
	if(is_dir($logPath)){
		echo "Clearing log folder\n";
		passthru("rm -rf {$logPath}/*");
	}else{
		echo "Creating log folder\n";
		passthru("mkdir {$logPath}");
	}

	$apacheUser = exec("ps aux | grep -E '[a]pache|[h]ttpd' | grep -v root | head -1 | cut -d\  -f1");

	switch($argv[1]){
		case 'chmod':
			$command = "sudo chmod +a \"`whoami` allow delete,write,append,file_inherit,directory_inherit\" {$cachePath} {$logPath}";
			if($apacheUser){
				$command .= " && sudo chmod +a \"{$apacheUser} allow delete,write,append,file_inherit,directory_inherit\" {$cachePath} {$logPath}";
			}
			echo "Running: {$command}";
			passthru($command, $return);
		break;
		case 'setfacl':
			$apacheCommandPart = ($apacheUser)
				? " -m u:{$apacheUser}:rwX"
				: ''
			;
			$command = "sudo setfacl -R {$apacheCommandPart} -m u:`whoami`:rwX {$cachePath} {$logPath} && sudo setfacl -dR {$apacheCommandPart} -m u:`whoami`:rwX {$cachePath} {$logPath}";
			echo "Running: {$command}";
			passthru($command, $return);
		break;
		case 'none':
?>
There is no way to set the permissions directly.  Please add 'umask(0000);' to app.php and app_dev.php to bypass the need for setting permissions, though it has some security implications.
<?php
			$return = 1;
		break;
		default:
?>
Unrecognized option.  Please try another option.  Try 'none' if your system doesn't support ACLs.
<?php
			$return = 1;
		break;
	}
}else{
?>
Choose what type of ACLs your system supports.  Options:
	chmod: supports `chmod +a` syntax
	setfacl: supports `setfacl` command
	none: doesn't have ACL support
<?php
	$return = 1;
}

//--return.  if a command failed above, set exit status.
if($return !== 0){
	exit($return);
}
